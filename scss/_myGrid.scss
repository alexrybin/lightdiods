
*{box-sizing: border-box ;}


// container
@mixin clearfix() {
  &:before,
  &:after {
    content: " "; // 1
    display: table; // 2
  }
  &:after {
    clear: both;
  }
}


$grid-gutter-width:         30px !default;


@mixin container-fixed($gutter: $grid-gutter-width) {
  margin-right: auto;
  margin-left: auto;
  padding-left:  floor(($gutter / 2));
  padding-right: ceil(($gutter / 2));
  @include clearfix;
}

$screen-sm:                  768px !default;
$screen-sm-min:              $screen-sm !default;

$screen-md:                  992px !default;
$screen-md-min:              $screen-md !default;


$screen-lg:                  1200px !default;
$screen-lg-min:              $screen-lg !default;


$container-tablet:             (720px + $grid-gutter-width) !default;
//** For `$screen-sm-min` and up.
$container-sm:                 $container-tablet !default;

$container-desktop:            (940px + $grid-gutter-width) !default;
//** For `$screen-md-min` and up.
$container-md:                 $container-desktop !default;

$container-large-desktop:      (1140px + $grid-gutter-width) !default;
//** For `$screen-lg-min` and up.
$container-lg:                 $container-large-desktop !default;


.container {
  @include container-fixed;


  @media (min-width: $screen-sm-min)  {
    width: $container-sm;
  }
  @media (min-width: $screen-md-min) {
    width: $container-md;
  }
  @media (min-width: $screen-lg-min) {
    width: $container-lg;
  }
}


//row

@mixin make-row($gutter: $grid-gutter-width) {
  margin-left:  ceil(($gutter / -2));
 margin-right: floor(($gutter / -2));
  @include clearfix;
}



// Generate the extra small columns

$grid-columns:              12 !default;

@mixin make-xs-column($columns, $gutter: $grid-gutter-width) {
  position: relative;
  float: left;

  width: percentage(($columns / $grid-columns));
  min-height: 1px;
  padding-left:  ($gutter / 2);
  padding-right: ($gutter / 2);
}
// Сокращенная копия make-xs-column
@mixin xs($columns, $gutter: $grid-gutter-width) {
  position: relative;
  float: left;

  width: percentage(($columns / $grid-columns));
  min-height: 1px;
  padding-left:  ($gutter / 2);
  padding-right: ($gutter / 2);
}

@mixin make-xs-column-offset($columns) {
  margin-left: percentage(($columns / $grid-columns));
}

// Сокращенная копия make-xs-column
@mixin xs-offset($columns) {
  margin-left: percentage(($columns / $grid-columns));
}


/*@mixin make-xs-column-push($columns) {
  left: percentage(($columns / $grid-columns));
}
@mixin make-xs-column-pull($columns) {
  right: percentage(($columns / $grid-columns));
}*/

// Generate the small columns
@mixin make-sm-column($columns, $gutter: $grid-gutter-width) {
  position: relative;
  min-height: 1px;
  padding-left:  ($gutter / 2);
  padding-right: ($gutter / 2);

  @media (min-width: $screen-sm-min) and (max-width: $screen-md-min){
    float: left;
    width: percentage(($columns / $grid-columns));
  }
}

// Сокращенная копия make-sm-column
@mixin sm($columns, $gutter: $grid-gutter-width) {
  position: relative;
  min-height: 1px;
  padding-left:  ($gutter / 2);
  padding-right: ($gutter / 2);

  @media (min-width: $screen-sm-min) and (max-width: 991px ){
    float: left;
    width: percentage(($columns / $grid-columns));
  }
}

@mixin make-sm-column-offset($columns) {
  @media (min-width: $screen-sm-min) {
    margin-left: percentage(($columns / $grid-columns));
  }
}

// Сокращенная копия make-sm-column-offset
@mixin sm-offset($columns) {
  @media (min-width: $screen-sm-min) {
    margin-left: percentage(($columns / $grid-columns));
  }
}

@mixin sm-offsetmax($columns) {
  @media (min-width: $screen-sm-min)and (max-width: 991px) {
    margin-left: percentage(($columns / $grid-columns));
  }
}




/*@mixin make-sm-column-push($columns) {
  @media (min-width: $screen-sm-min) {
    left: percentage(($columns / $grid-columns));
  }
}
@mixin make-sm-column-pull($columns) {
  @media (min-width: $screen-sm-min) {
    right: percentage(($columns / $grid-columns));
  }
}*/

// Generate the medium columns
@mixin md($columns, $pl: 15px, $gutter: $grid-gutter-width) {
  position: relative;
  min-height: 1px;
  padding-left:  ($gutter / 2);
  padding-right: ($gutter / 2);

  @media (min-width: $screen-md-min) and (max-width: 1199px)
  {
    float: left;
    width: percentage(($columns / $grid-columns));
    padding-left: $pl;
  }
}











@mixin md-offset($columns) {
  @media (min-width: $screen-md-min) and (max-width: 1199px) {
    margin-left: percentage(($columns / $grid-columns));
  }
}
/*@mixin make-md-column-push($columns) {
  @media (min-width: $screen-md-min) {
    left: percentage(($columns / $grid-columns));
  }
}
@mixin make-md-column-pull($columns) {
  @media (min-width: $screen-md-min) {
    right: percentage(($columns / $grid-columns));
  }
}*/

// Generate the large columns
@mixin lg($columns, $gutter: $grid-gutter-width) {
  position: relative;
  min-height: 1px;
  padding-left:  ($gutter / 2);
  padding-right: ($gutter / 2);

  @media (min-width: $screen-lg-min) {
    float: left;
    width: percentage(($columns / $grid-columns));
  }
}
@mixin lg-offset($columns) {
  @media (min-width: $screen-lg-min) {
    margin-left: percentage(($columns / $grid-columns));
  }
}
/*@mixin make-lg-column-push($columns) {
  @media (min-width: $screen-lg-min) {
    left: percentage(($columns / $grid-columns));
  }
}
@mixin make-lg-column-pull($columns) {
  @media (min-width: $screen-lg-min) {
    right: percentage(($columns / $grid-columns));
  }
}*/


